name: Test

on: [push, pull_request]

jobs:
  build:
    name: build (Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}, Redis.py ${{ matrix.redis-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
        django-version:
          - '2.2'
          - '3.0'
          - '3.1'
          - 'master'
        redis-version:
          - 'latest'
          - 'master'

    services:
      redis:
        image: redis:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 6379:6379

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-v1-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/tox.ini') }}
        restore-keys: |
          ${{ matrix.python-version }}-v1-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade tox tox-gh-actions

    - name: Tox tests
      run: |
        # setup a redis sentinel
        CONF=$(mktemp)

        cat > "$CONF" <<EOF
        sentinel monitor default_service 127.0.0.1 6379 1
        sentinel down-after-milliseconds default_service 3200
        sentinel failover-timeout default_service 10000
        sentinel parallel-syncs default_service 1
        EOF

        # start and wait for the sentinel to be healthy
        REDIS_SENTINEL=$(docker run \
          --health-cmd 'redis-cli -p 26379:26379 ping' \
          --health-interval 10s \
          --health-retries 5 \
          --health-timeout 5s \
          --network host \
          --user $(id -u):$(id -g) \
          --volume /tmp:/tmp \
          --detach redis:latest redis-server "$CONF" --sentinel)
        trap "docker stop $REDIS_SENTINEL" EXIT
        while
          docker inspect $REDIS_SENTINEL \
            --format '{{.State.Health.Status}}' \
              | grep -q starting
        do sleep 1
        done

        tox -v
      env:
        DJANGO: ${{ matrix.django-version }}
        REDIS: ${{ matrix.redis-version }}

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        name: Python ${{ matrix.python-version }}
